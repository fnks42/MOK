import re
def get_decimcal(n: float) -> float:
    return float(re.search(r'\.\d+', str(n)).group(0))

def get_count(number):
    s = str(number)
    if '.' in s:
        return abs(s.find('.') - len(s)) - 1
    else:
        return 0
z =  [164, 43, 86, 218, 15, 99, 78, 193, 169, 43, 218, 29, 64, 29, 9, 92, 127, 218,
127, 43, 86, 218, 86, 43, 92, 193, 169, 43, 218, 169, 9, 92, 122, 99, 22, 218,
164, 127, 99, 218, 43, 29, 99, 218, 57, 9, 86, 43, 127, 211, 127, 218, 106, 64,
29, 86, 43, 64]
b = []
x3 = []
x = [[19,32], [72,234], [26,185], [51,7], [6,285], [156,133], [141,80], [94,29], [72,234],
[156,133], [86,160], [6,285], [61,225], [72,234], [31,250], [156,133], [76,142], [72,234],
[76,142], [96,74], [57,252], [151,104], [81,227], [66,23], [72,234], [31,250], [156,133],
[47,296], [41,172], [156,133], [19,32], [86,160], [31,250], [107,83], [156,133], [86,160],
[81,227], [31,250], [26,185], [86,160], [94,29], [19,32], [156,133], [51,7], [72,234],
[94,29], [72,234], [81,227], [132,192], [31,250], [156,133], [66,23], [31,250], [156,133],
[76,142], [72,234], [61,225], [72,234], [21,89], [6,285], [146,205], [94,29], [156,133],
[72,234], [94,29], [156,133], [76,142], [81,227], [72,234], [86,160], [94,29], [96,74],
[26,185], [132,192]]



#for i in range(len(z)):
    #a = (x[i][0])
    #z.append(a)
n = 0
x1 = 0

for i in range(len(z)): 
    x1 = (z[n]-i)/7
    if (get_decimcal(x1) == 0):
        b.append(x1)
print(b[0])

